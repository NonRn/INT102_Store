/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import javax.swing.JFrame;
import code.*;
import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/**
 *
 * @author internet
 */
public class Customer extends javax.swing.JFrame {
    private long id = 0;
    private DefaultTableModel model;
    /**
     * Creates new form Customer
     */
    public Customer() {
        initComponents();
        model = (DefaultTableModel) jTable1.getModel();  // set table ในหน้าให้เป็น default nodel เพื่อให้ง่ายต่อการจัดการตาราง
        setLocationRelativeTo(null);
    }
    
    public void setId(long id) throws SQLException, ClassNotFoundException{  // เมธอดที่ให้ Login ส่ง id เข้ามาเพื่อระบุตัวตนว่าเป้นคนไหน login
        this.id = id ;
        String sql1 = "Select * from Customer where cusId=" + this.id ;
        Class.forName("org.apache.derby.jdbc.ClientDriver");        //เชื่อมต่อ Database 
        Connection conn = DriverManager.getConnection("jdbc:derby://localhost:1527/Store","app","app");
        //Connection conn = ConnectionBuilder.connect();    //Err RUNTIME EXCEPTION
        PreparedStatement ps = conn.prepareStatement(sql1);
        ResultSet rs = ps.executeQuery();
        rs.next();  
        jLabel2.setText(rs.getString("CUSNAME"));  // แสดงข้อมูลของ Customer ในหน้า Customer (ด้านบนตาราง)
        aboutCus.setText("ID : "+rs.getLong("CUSID")+"        Name : "+rs.getString("CUSNAME")+" "+rs.getString("CUSSURNAME")
                +"        Age : "+rs.getInt("CUSAGE")+"        Address : "+rs.getString("CUSADDR"));
        account.setText("Account : "+rs.getString("USERNAME") + "        Your point : " + rs.getInt("CUSPOINT"));
        conn.close();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        nameCus = new javax.swing.JLabel();
        aboutCus = new javax.swing.JLabel();
        logout = new javax.swing.JButton();
        detail = new javax.swing.JButton();
        cart = new javax.swing.JButton();
        addCart = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        account = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Price", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Hello , ");

        logout.setText("Log out");
        logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutActionPerformed(evt);
            }
        });

        detail.setText("Detail");
        detail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detailActionPerformed(evt);
            }
        });

        cart.setText("Your cart");
        cart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cartActionPerformed(evt);
            }
        });

        addCart.setText("Add to cart");
        addCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCartActionPerformed(evt);
            }
        });

        jLabel2.setText("name");

        account.setText("Account :");

        txtSearch.setText("Enter a word");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(aboutCus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(40, 40, 40)
                                        .addComponent(nameCus))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cart)
                                .addGap(18, 18, 18)
                                .addComponent(logout)))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addCart, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(detail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(124, 124, 124))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nameCus)
                        .addComponent(logout)
                        .addComponent(cart)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(aboutCus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addCart, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton1))
                    .addComponent(detail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutActionPerformed
        System.out.println("id : " + id + " Logout");   // แจ้งเตือนการ logout
        new Login().setVisible(true);  //เปลี่ยนหน้าไปยัง log in แล้วปิดหน้านี้
        this.dispose(); 
    }//GEN-LAST:event_logoutActionPerformed

    private void cartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cartActionPerformed
        new MyCart(id).setVisible(true);  //เปิดหน้า cart
    }//GEN-LAST:event_cartActionPerformed

    private void detailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detailActionPerformed
        // เมื่อกดปุ่ม Detail       
        try {    
            int index = jTable1.getSelectedRow(); // ตรวจสอบ row ที่เลือกอยู่ 
            String idPro = "";
            if (index==-1)
                JOptionPane.showMessageDialog(null, "Please choose one product on table", "Err", JOptionPane.ERROR_MESSAGE);
            else
                idPro = jTable1.getValueAt(index, 0).toString(); // ดึง id จาก row ที่เลือกอยู่
            String sql = "select * from product where proid = "+idPro;   //เชื่อมต่อ Database ดึงข้อมูล Product ของชิ้นที่เลือก
            Connection con = Code.ConnectionBuilder.connect();
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();                       //ด้านล่างดัดแปลงมาจาก VerySimpleBankSystem ของอาจารย์ ไม่ค่อยรู้เรื่องเหมือนกัน
            JDialog diaDetail = new JDialog(getOwner(), "Detail"); //สร้าง Dialog (เมื่อเป็น หน้าใหม่แบบไม่ต้องสร้างเป็น class)
            diaDetail.setVisible(true);
            JPanel showDet = new JPanel(new GridLayout(0, 2));  // สร้างพื้นที่ว่างสำหรับใส่ข้อความ ด้านหลัง 0,2 คือแบ่งหน้าเป็น 2 ฝั่ง
            rs.next();
            showDet.add(new JLabel("   Product Id : "));  //ใส่ข้อมูล
            showDet.add(new JLabel(""+rs.getLong("ProId")+"   "));
            showDet.add(new JLabel("   Product Name : "));
            showDet.add(new JLabel(""+rs.getString("ProName")+"   "));
            showDet.add(new JLabel("   Product Type : "));
            showDet.add(new JLabel(""+rs.getString("ProType")+"   "));
            showDet.add(new JLabel("   Product Detail : "));
            showDet.add(new JLabel(""+rs.getString("Det")+"   "));
            showDet.add(new JLabel("   Price per piece : "));
            showDet.add(new JLabel(""+rs.getDouble("Proprice")+"   "));
            diaDetail.add(showDet);  //ให้ JPanal อยู่ใน JDialog และ อยู่ตรงกลางของ JDialog
            diaDetail.pack();
            con.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        } catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_detailActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // เมื่อเปิดหน้าต่างมา
        try{
            int totalRow = jTable1.getRowCount() - 1 ;  //ใส่ข้อมูลในตาราง
            while (totalRow > -1){   // ถ้าจำนวนบรรทัดปัจจุบันมีอยู่ในลบทิ้ง #วนลูปลบทีละบรรทัด
                model.removeRow(totalRow--);
            }
            
            Connection con = Code.ConnectionBuilder.connect(); // เชื่อมต่อ Database เอาทุกค่าของ Product 
            PreparedStatement ps = con.prepareStatement("Select * From product where amount <> 0");
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){  //วนลูปเอาค่ามาแสดงบนตาราง
                Vector row = new Vector();   // สร้าง row ใหม่
                row.add(rs.getLong("proId"));  // เพิ่มค่าในแต่ละ column
                row.add(rs.getString("proName"));
                row.add(rs.getDouble("proPrice"));
                row.add(rs.getInt("Amount"));
                model.addRow(row);  // เพิ่มบรรทัดที่มีค่าทั้งหมดแล้วในตาราง
            }
            jTable1.setModel(model);
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        } 
    }//GEN-LAST:event_formWindowOpened

    private void addCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCartActionPerformed
        //เมื่อกดปุ่ม add cart
        try {
            int index = jTable1.getSelectedRow();  //เช็คบรรทัดที่เลือกอยู่ในตาราง 
            String i =""; long idPro=0;
              if (index==-1){
                JOptionPane.showMessageDialog(null, "Please choose one product on table", "Err", JOptionPane.ERROR_MESSAGE);
            }
            else {
                i = jTable1.getValueAt(index, 0).toString(); // ดึง id จาก row ที่เลือกอยู่
                idPro = Long.parseLong(i);   //ทำ id ให้เป็น long จะได้นำไปใช้ได้ง่ายขึ้น
            }
            
            Connection con = Code.ConnectionBuilder.connect();   // เชื่อมต่อ Database 
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("Select * from CART where customer = "+id+" and productId = "+i+" and status = 0"); //เอาทุกค่าของ cart
            Statement st2 = con.createStatement();
            ResultSet rs2 = st2.executeQuery("Select amount from Product where proid ="+i); //เอาจำนวนสินค้าใน product
            rs2.next();
            int amount = rs2.getInt("amount");
            if (amount==0){  // จำนวนสินค้าเป็น 0 ไม่สามารถแอดเข้า cart ได้
                System.out.println("You can't add to cart");
            }else{
                if (rs.next()){  //ถ้าสินค้าที่กดแอดเข้ามามีอยู่ใน cart อยู่แล้วให้เพิ่มที่จำนวน
                    int am = rs.getInt("amount");
                    String oldInsert = "UPDATE CART SET AMOUNT = "+ ++am +" WHERE customer = "+id+" and productId = "+i+" and status = 0";
                    PreparedStatement ps = con.prepareStatement(oldInsert);  //Insert เป็น ++ เพราะว่าสินค้าเพิ่มได้ทีละ 1 ชิ้น
                    ps.executeUpdate();
                } else {  // สินค้าที่เพิ่มเข้ามาไม่เคยมีใน cart #Add ใหม่
                    String newInsert = "insert into CART values("+idPro+",1,"+this.id+",0)"; // ค่าที่ 2 เป็น 1 เพราะเพิ่มได้ทีละ 1 ชิ้น
                    PreparedStatement ps = con.prepareStatement(newInsert);
                    ps.executeUpdate();
                }
                String proData = "Update Product set amount = " + --amount + " where proId = "+i;   // ให้มาลดจำนวนสินค้าในสต๊อก
                Statement st3 = con.createStatement();
                st3.executeUpdate(proData);
                System.out.println("Add to cart success");
            }
            formWindowOpened(null);   // รีเฟรชหน้า Customer ใหม่ เพื่อให้ตาราง update
        } catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_addCartActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        formWindowOpened(null);        // เมื่อคลิ๊กที่หน้า Customer ให้อัพเดตตารางใหม่
        String sql1 = "Select * from Customer where cusId=" + this.id ;
        try {
            Connection conn = Code.ConnectionBuilder.connect();
            PreparedStatement ps = conn.prepareStatement(sql1);
            ResultSet rs = ps.executeQuery();
            rs.next();  
            account.setText("Account : "+rs.getString("USERNAME") + "        Your point : " + rs.getInt("CUSPOINT"));
        } catch (Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String search = txtSearch.getText().toLowerCase();
        
        String sql = "SELECT * FROM Product WHERE Lower(ProName) LIKE '%"+search+"%'"
        +" OR Upper(ProName) LIKE '%"+search+"%'"
        +" OR ProName LIKE '%"+search+"%'"  ;
        //+" OR det LIKE '%"+search+"%'" ; 
        try { 
            Connection con = Code.ConnectionBuilder.connect();
            int totalRow = jTable1.getRowCount() - 1 ; 
            while (totalRow > -1){
                model.removeRow(totalRow--);
            } 
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            
            while(rs.next()){  //วนลูปเอาค่ามาแสดงบนตาราง
                Vector row = new Vector();   // สร้าง row ใหม่
                row.add(rs.getLong("proId"));  // เพิ่มค่าในแต่ละ column
                row.add(rs.getString("proName"));
                row.add(rs.getDouble("proPrice"));
                row.add(rs.getInt("Amount"));
                model.addRow(row);  // เพิ่มบรรทัดที่มีค่าทั้งหมดแล้วในตาราง
            }
            jTable1.setModel(model);
            con.close();
        } catch (Exception e) { 
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel aboutCus;
    private javax.swing.JLabel account;
    private javax.swing.JButton addCart;
    private javax.swing.JButton cart;
    private javax.swing.JButton detail;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logout;
    private javax.swing.JLabel nameCus;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
